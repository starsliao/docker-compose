version: "3.7"
services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    hostname: nginx
    restart: always
    ports:
      - "80:80"
    network_mode: "host"
    volumes:
      - /usr/share/zoneinfo/PRC:/etc/localtime
      - /data/deploy/config/nginx/nginx.conf:/etc/nginx/nginx.conf
#      - /data/config/nginx/proxy-app-ws.conf:/etc/nginx/proxy-app-ws.conf
#      - /data/config/nginx/proxy-app.conf:/etc/nginx/proxy-app.conf
      - /data/deploy/config/nginx/conf.d:/etc/nginx/conf.d
      - /data/nginx/logs:/var/log/nginx_proxy
      - /data/app:/data/app

  redis:
    image: redis:5.0.5-alpine
    container_name: redis
    hostname: redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWD}
    ports:
      - "6379:6379"
    network_mode: "host"
    volumes:
      - /usr/share/zoneinfo/PRC:/etc/localtime
      - /data/redis:/data

  mq:
    image: rabbitmq:3.7.17-management-alpine
    container_name: mq
    hostname: mq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    network_mode: "host"
    volumes:
      - /usr/share/zoneinfo/PRC:/etc/localtime
      - /data/rabbitmq:/var/lib/rabbitmq
      - /data/deploy/config/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

  mysql:
    image: mysql:5.7
    container_name: mysql
    hostname: mysql
    restart: always
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=5000 --max-connect-errors=50000 --sql-mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION --wait-timeout=1814400 --interactive-timeout=1814400 --open-files-limit=65535 --innodb-buffer-pool-size=2G --max-allowed-packet=500M --skip-ssl
    ports:
      - "3306:3306"
    network_mode: "host"
    volumes:
      - /usr/share/zoneinfo/PRC:/etc/localtime
      - /data/mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWD}

  mongo:
    image: mongo:3.6.9-stretch
    container_name: mongo
    hostname: mongo
    restart: always
    command: mongod --directoryperdb
    ports:
      - "27017:27017"
    network_mode: "host"
    volumes:
      - /usr/share/zoneinfo/PRC:/etc/localtime
      - /data/mongo:/data/db
